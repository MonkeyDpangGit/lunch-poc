package com.tencent.demo.controller;

import java.io.IOException;
import java.util.Map;
import javax.servlet.http.HttpServletRequest;
import javax.servlet.http.HttpServletResponse;
import org.springframework.web.bind.annotation.GetMapping;
import org.springframework.web.bind.annotation.Mapping;
import org.springframework.web.bind.annotation.PostMapping;
import org.springframework.web.bind.annotation.RequestBody;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.bind.annotation.RequestMethod;
import org.springframework.web.bind.annotation.RequestParam;
import org.springframework.web.bind.annotation.RestController;

/**
 * MockController
 *
 * @author torrisli
 * @date 2024/4/18
 * @Description: MockController
 */
@RestController
public class MockController {

    @GetMapping("/sgid-sso/login")
    public void redirect(@RequestParam String service, HttpServletResponse response) throws IOException {

        System.out.println("[redirect] " + service);

//        response.sendRedirect(service
//                + "?province=1&encryptKey=2&loginType=3&execution=qwiksdfghjksdfghjkqwiksdfghjksdfghjkqwiksdfghjksdfghjkqwiksdfghjksdfghjkqwiksdfghjksdfghjkqwiksdfghjksdfghjkqwiksdfghjksdfghjkqwiksdfghjksdfghjkqwiksdfghjksdfghjkqwiksdfghjksdfghjkqwiksdfghjksdfghjkqwiksdfghjksdfghjkqwiksdfghjksdfghjkqwiksdfghjksdfghjkqwiksdfghjksdfghjkqwiksdfghjksdfghjkqwiksdfghjksdfghjkqwiksdfghjksdfghjkqwiksdfghjksdfghjkqwiksdfghjksdfghjkqwiksdfghjksdfghjkqwiksdfghjksdfghjkqwiksdfghjksdfghjkqwiksdfghjksdfghjkqwiksdfghjksdfghjkqwiksdfghjksdfghjkqwiksdfghjksdfghjkqwiksdfghjksdfghjkqwiksdfghjksdfghjkqwiksdfghjksdfghjkqwiksdfghjksdfghjkqwiksdfghjksdfghjkqwiksdfghjksdfghjkqwiksdfghjksdfghjkqwiksdfghjksdfghjkqwiksdfghjksdfghjkqwiksdfghjksdfghjkqwiksdfghjksdfghjkqwiksdfghjksdfghjkqwiksdfghjksdfghjkqwiksdfghjksdfghjkqwiksdfghjksdfghjkqwiksdfghjksdfghjkqwiksdfghjksdfghjkqwiksdfghjksdfghjkqwiksdfghjksdfghjkqwiksdfghjksdfghjkqwiksdfghjksdfghjkqwiksdfghjksdfghjkqwiksdfghjksdfghjkqwiksdfghjksdfghjkqwiksdfghjksdfghjkqwiksdfghjksdfghjkqwiksdfghjksdfghjkqwiksdfghjksdfghjkqwiksdfghjksdfghjkqwiksdfghjksdfghjkqwiksdfghjksdfghjkqwiksdfghjksdfghjkqwiksdfghjksdfghjkqwiksdfghjksdfghjkqwiksdfghjksdfghjkqwiksdfghjksdfghjkqwiksdfghjksdfghjkqwiksdfghjksdfghjkqwiksdfghjksdfghjkqwiksdfghjksdfghjkqwiksdfghjksdfghjkqwiksdfghjksdfghjkqwiksdfghjksdfghjkqwiksdfghjksdfghjkqwiksdfghjksdfghjkqwiksdfghjksdfghjkqwiksdfghjksdfghjkqwiksdfghjksdfghjkqwiksdfghjksdfghjkqwiksdfghjksdfghjkqwiksdfghjksdfghjkqwiksdfghjksdfghjkqwiksdfghjksdfghjkqwiksdfghjksdfghjkqwiksdfghjksdfghjkqwiksdfghjksdfghjkqwiksdfghjksdfghjkqwiksdfghjksdfghjkqwiksdfghjksdfghjkqwiksdfghjksdfghjkqwiksdfghjksdfghjkqwiksdfghjksdfghjkqwiksdfghjksdfghjkqwiksdfghjksdfghjkqwiksdfghjksdfghjkqwiksdfghjksdfghjkqwiksdfghjksdfghjkqwiksdfghjksdfghjkqwiksdfghjksdfghjkqwiksdfghjksdfghjkqwiksdfghjksdfghjkqwiksdfghjksdfghjkqwiksdfghjksdfghjk&_eventId=5&errmsg=");
        // external
//        response.sendRedirect(service
//                + "?province=&encryptKey=0474A5E5326EB90556900209F5BB65598A33662AB4C5D144469F8788DBD448E92B3726F0C1355249D0A95E82FE49D6DCD2C394408E4156642E684AF8FC74109352&loginType=remoteLogin&execution=2bfbf224-05ab-4837-b641-cd08c83d468e_ZXlKaGJHY2lPaUpJVXpVeE1pSjkuVUlZcE9kUXNuQ1FHVWs3UVM0Vkh5bGRsbFFYSUZFaDU5S0QxcmxxbjdZVDczZnc0R0hDNEhtRzVsakFVSWJkcGtjZVo1Q29GbEk0aE9adnJidmQ2a0JLdVJxQ2FCUDZVNUFuQmVvenNXNFRtZ2d5NEJwdGVlZGp2ZGtSTjFKL0pzRnV2UGNhUUM5cERkQm9LWmdRbXV5aGllRXBId1pIMTZQRjdXYmd4N3J0NURhS09keFhKVkxLMVFGbTBQaStZRk5vUHZHSWlyeGJOTVUxalFKLzFxdk1QZ0VCRzZiWEQ0bEhnZ0lqa1ZUZUhNWUVaMmFjZURSZTk5Q2owVmN0TmEzVXdwODhZWWZZNU9pVjNXTmc3M0lSMW1TbDJpUnpDWDJwZ21jNGxlZVhMT1pBbUg0VklXRjYrR3orb1ROblFCT2tXMU9OZGtQczg4SmYxTTdqeDlvUEJaazhUMzdvZ2E5aWpQbms5THkyTVF1ZUtobWxKb0NQN21NL2xhd0VsQjRmNlpWTjdKWDB0UENjSFNvem8zbEVzcVd2bWlZUWFXVktlKzNHR0xXRVV4S1g4bVQ2M3ZsRkNCb3g3bExBcXp5d0ZxUjdYcTZTdG9lZ3VkRFFDUzEzcE5Ic3ZlT01OcWJ0OWhnV21MaFV2RDlhbHFzQ2d6R0hsVm9QR1NiRFVZRlZTN2ZsTFR4TXFBQTlFUVJBRXNnaC9Rd3RHVDI0V2VmUjcrVXVlOTFEcFd1bVByRVBlclJjSG1jeUZudVJ5WWdZVWY3bFFGMzFrSTQyVnpoSWxyNTVaenBWcmVqNW1qRXN4MDhNMW02T2QxZ2FWZzNhNy9vZkR0UGlOTmxmblA4Y0phM2RwWWZXczRNaFM2TGhwZ3JabGZaYXVZN3pQUUdScFN6VWJMNlhQR3dORFY5bVJBWFRSZS8vNFByMlhMcUhoMFBtRVdBU0l2UzNUVEdXS0d5dWl5akZnYTRPdHYxdk05UHRlejlieVpVNVNhanpXSmlyVTdkZXJvQ0NuczBNUGUwZGJ0SUVlZkNZYk1UaHhCT3RxRzdadkxET0RnUHNhckVhN21ESE1SekVHV0hsdFFIMXMramk3SlY1U00wcnRsVWV0V3hPUlU1ZzQ2ZkZvN2lUcEJjMnJOaUdPaHZNWlJvZVN4UmwybVozZUNjK3BsajFCZEMxeitQUVdQM0VTSTVORnJMTTdBOE5oZVdnNVZUYVB6SFVTVHRZSkpmS0g5UDc5QW93WGlaUWJiSUhkMjQ3OGZFaTBVanFIMENucGRPSGx4Qk4vMXhHL01wdC9GNklKcDF2bFlpdGpla1BKcmVMUU00RWlUbUczQVNlQ3ZvT3VxOHZnMW1JOXEzT3hJa2lXLzV0akFUUS9pMWdaRkdvaTZwM1I3bmQ1b08rYndCb0ZsVEgwMHdQcVZKc2RRNVY2R3VKVGNDUWRSeDJtcFNHT0JzWjRWWDBkRlI5Ly9UbEw4TXg1WThCVE1PdjRLeU9ISTB3aWo0M25FbjIxQWxYc0QyZ0xxdml5RVIwVFJUSHFvQkdmWTcvZXFoSWRHYTRweXN3aVAwUG9TRkd3eGU5WlVnOFFRV0xwOWQ2cWNaNTBlTWRYaThmMkFDM09lb3lXcDJxUmJOMHFWYjlCcXBzZkhTYXc1UTZyWHovOXZTd2V3RXUvN0swY0h3bDdscWJWUnZ5NnJMOUFNUnR0UGd5R3ZDK3lPTU9zeTg4ek1xTEhXVS9PeHRXdVhra0NSZyt0ZTFZREZ4Vm5EdkwzVklZR3RrLzEydnB5ZklwZ3dURzB6T0FJRmlJUjExTEhTTW9HYjY0MEZnQ2VmL1IzWUhnczRxNXgzZEY0dkUxYjZ2Qnp5QXBiTysrUnNBQS9FSHprOW5Wdk1pbk4rWVl0Q1BlK1lpbnpCdFdsTmRTK1BKZWdOTG5ub1pVS2JNVUZ3Ny9sZFJ3dVZ3d3BmSVNmRXE2eXJ1aWlBTU9xSGJtU2hzeURCcW1OVkZrMWZSalNFY3pjdUU2THA4bHFvODY5NW9WNUZ0c3RVYzU5YzRMdUl2MlhYbk1hQUhGN0RmOGZNbC9SRElLMk5zWDM4V2NlR0F0VkhmQlNLMjE4Zzg5OUNpZUxCSjE1WmVVMEVJekEzcmhUVXBVdFBEMCs5N1hrN2xuVEgxWlQzTk0vd0NzWVIza3g1QVcvRno3TTlrZG14bit2enhkemNJb0tzRGRaQlowVFBwRGcrdTlmazNvQjdQUUE2Q0xRRXJ6ei9OZy9DV0Z3RW1pd1BpaVJiMEVRa0MyTzBlTXpseXNORStsZWxaNFJLZ296QkQyLzB2bHAwRFZGTFhpSjFVS1VTK1pYUmZLSHR0S25qbXhGU21qZkhOVTJrcFdvNTV4NVdBdDg1ckU3QkNpM25LVHpVVDRaVjl3M2g2UTBFK0NVRmpabXMySDdKVE11N1lDR2UzTGxydHorR1NFRzluZ2ppNHpCUlRnOGtmSnQyQTBWWDkzaUZkUnZCTGpIQWFpK0RXQU0yNlZwWHZIUHgyVzg2UlJ4eUpXQk9iS002b0Jqd1RRdExJV1N0Y2UwblNnZmZQbEtEZGNOSnZyZjB1K0RFZlRrcUM1TXVPK3J0dmx3WWZBd2VjSHU1TXlHOHhZWHFPeXJwWElkVkhYQVFWNTJTRWNtSHVNMkNKUWpYeldhZ1lOaVZ5ZmhrRk5naVNCczU2MjZFN21DejFKN3I3VThEbmY5dmJiK0V2UHlleXlmMTI5TEV0VXBjNTlWZHRuT3AxL1dFblNnUld4Q0JEZ2xaS1dpRkVaMHhkZlJGQ05ianRSMjMwa2VRUGhSTE9aa1JGNWtiQnh4T1dJdk00UityT0N5akZ5bWlob1g1V2hvckJES002MGxJUVFaM2RRL1dUeGxzUFU5all2SXF4aXBqbnNRaERueENnVXJDRFgxS0Uyd052Y0lwLzQvamU4R3ppb0FpS3Z6SGROVmpYelVwbGtRQkVCSmtXSkpLYTV6bXFhWlBieXVzV2hlbHhuZ1Znc2R3SzZoblZ4SWFvOE1ORkk5YnhDeGJKQ2NNbVRaMWlUMFBNOWp0cXo4Z0VlY2tSemtnYjhKN3N0cXFldGpKWTI0empSNjNRMHJQSU9lVUdoN2JYd2dvT3l1Uml1MW5XN0NEbkdMdFRQcFNlZTdNaDhNNHhkaW9YUXp2eVlYRWpVV1llK3ptZDVlVFJkREM0ald5SHM1OU0wdlFqVklubGJlRkJyNnBDMlVNOC84L1VtQUlJb05RT0hWdndxbUNCQVh1OWNrdGY1L3dqZVpVYUtuVzRpTldiZ0R3OXFhTWsrSDM0RlFZRmd2dFN6U1F3LzltVzZER1VWNUgvZnhnTUt5bjNkazE2RlF2MEY0K2txOHVFSmJtejFwWjVRTUpOUlN3SDZoZnlqZmp0SGptb3lHbjUxY0NVMjBUMDNTMjBSb3grdXdBUTF5QUsrS2JmRGZtNy9Ed29NZDVHS2ZMSHFTdVVSdGxibWd3QWF6SGZjdHBRRUJiaEhMMGljd3BTYSt2dWVCcUxKbFVocnFEc0cwaTVpZVVCaDhpSWd1ekM3ajR3RVFWVEZxYzEyL2NsdEppUTl0NUtpaUw3REE3Wm93ckN3amF4K0hTcmpZTnJmdllobVR0Z0xxY0RMNys0aDRRQnp0enM1aERTV3BpendIMlhkaDMyYmJ5eTZQd25XRUlLbEJXTXJoRVBBeGdtM2x3L056akdJVDB4ZjZMdTd1d3YrUlZFWFlKa01TUHBIbmhGN0NtaEFvbHpaem9tdi9raE4zN0F4MVo3MWhZYmd3S3dFUnVTeUcxcjBoOS82LytBV1R1Tm0xOGduU2VJUGdwcHpleUdvM0twT2s2eGtsUTI2Zk1DaHR6WmFhYlY1UFA0U3djcXJlQXBrTUF4eDVSdStuTDBCbk5pUXZyWGozdm9HbVJ6NGpQRk9qaTZkUFM5dFcwWDhXOFBQQWZGWlRleWpJNlJLeVE4NWZXY1Y3Y0toWm5YYldVMUE0SEtkK01ZS0p6ZzNCTm02U1QrcDhLYXF6UWs2cGFhQmdnYnIyTEFzK1gxNkF3Zis0QWRzQWtrWjNOSFBMRWIwc0RXOEc2WHJqWGdmUjl1bVZyTXF3a1F6VnJ6bW15WXJNVXRaN0ZqdWpjYXFOUm5SZ0llckpsc2VsTWFxSHVobjBwYkFXYmpRam4xbk9xV2FHMzNBeGE5Q05DVmN0Nm5tekF4NjVTSUlZQ1VjM2c2a1pJcGM0Nk9jV1VoMzJuSDArWTZ3eTJLWmdsZjIvbHRqYXczWjZjeU5MVzJqMGRKaUxtVjRsM3FRY0ZGK0NydTBOTEx4U1AwZmZkR054TDZ5YXMrZHdCejR6MnI5d25PMmNQb1Axalo0LzB4TmFiSm5SeHR0QlUzOUpUYUZtRHZxN3RHNy9rRU5FMDV0M3NDTG5OaXZzaW1wbklPVTB0Z1Z1Z0tyN3V2UkN0NzE0SGU1YS90S2xVR3hzUWRMcGxIcHkzWWQrNDIrUW5oOCtpREJyTm9UMnBXY1dMQm5jaWZvUlZoTDdGTXVvdmNXMXhMM2E0ZEpCaXpxVzZ3TXVzZGxkSUtzQ3VhSS9HQUY1bHo1eElsNzR6NWxHRHd4ZUg5ZmVjVGN0NjhxTGJDOExSVFl0OGFBeXoxNmRvQUFXMjZGNGpnWUtyV01aNXJNOWk4NitTYjZZZWl3Wmd6V2U1NWhjaW52cnJaVVdsdmJ0WUIwai84WjJVNk52UVpWcUxaNVFJc3VwNFVxd2pnMkxIRnZRZXJBSkFlRnl4WlpmMFliMlladVlDeUtaMnF0UnRWNUh1M0hSZGZtRm9rNjNmVTI2NzRoQzVDVjYzeWNHc0VhbHFUNjdwZnNHVml5WmtuWExKbkM1cXliby92VUcrOHFPbm1BVzJhQ1RFakhRaS95Z1VkYmM0dkU2STZzczFsU0l4SDE5NVZvYzNUdzBUYkpBMm01T0hpRTBiQ3VjQkdHMDBPZkhvMTNxVU8rbW02enBHRjJzeFM3QWJCcEFieXFNK3NHaE00RXJXZHRNaGc3L1ZZOVdUR3hnNEZySUlSQXNMK2hMY3QzYVlhZm9EVGZzdkgrdSt2OXdQYnQzNmIybDFUdUdXNkhPZE5haGpqbHhiaDVscVdnYjA2eWFxdWxJbHlGY0lndm5rS2hQZFVJK1VkeVRYQlNQNDgvemFyMFA0UVBFWW85OE0vMm9PSjdHWHRzSEtPWXIxekVLQnhocDM0Y25xbWJPdGZaTG5vLzRPVS9wTUgvQ3BxWmg4QTdKNEhqZmRpMWRNOEFyeXBwR2crSVRxeG1wQk54ZHpBaU9lbFRRRHJ4U1RkcGI1ZEFiTW9SbFNZVE52RGczMDZ6VEdGaFBkcThrOUVHMzcvaHJ5V25wQzBSRTQrcHplSThuYmZ2dUEvL3Aya0hTaFVsOE44U3FkdktHdVlhT0wxUUkyMmVaQmYzRWtNdWtlWk13V2M5WmJXTXg2dHZHLnBwQU90WXhpQ0FVZ19YN2duTHk2Uk9XRTU2M3Y3Z205c1JZQVV6MzdqXzFRN2NtV0lCTDNYdnhQTmdlcXd6UVJ4S1F6VFBEN0NlMGNfdFlpZUpBUVB3&_eventId=submit&errmsg=");
        // internal
        response.sendRedirect(service
                + "?lt=LT-1052555-1Ih5FPlOpyf0lD2X2qmdTHeeylDsWC&validated=true&service=http%3A%2F%2Feiam.epri.sgcc.com.cn%3A8035%2Fauth%2Fud%2Fisc%2Flogin%2Fe3e3dcea-291f-4fb5-a390-dae6a4e171dd&execution=e2s1&encryptionKey=00a767ca54db607dc96e5d69c60bf16f3878139ae4ecb4101912da759eaa6ee963aee8efc78a22fe413674480e1dc2168ab36f0153ac8b575e44b3f8fc0621958717ba1aef7a0b977f46a54044e71add31cb5e5534996de016c9a3600de424f6dbd6d0b9d335c26ca3083c53f21f37903cf576ca7fd1ea82f37fe0f1f4c884b3bb%40010001&encryptionType=rsa");

        return;
    }

    @PostMapping("/sgid-sso/login")
    public void formSubmit(HttpServletRequest request, HttpServletResponse response) throws IOException {

        Map<String, String[]> parameterMap = request.getParameterMap();
        System.out.println("[formSubmit] " + parameterMap.toString());
        String service = parameterMap.get("service")[0];

        response.sendRedirect(service + "?ticket=ticket_qwertyuiop1234567890");
        return;
    }

    @RequestMapping(value =  "/sgid-sso/serviceValidate", method = {RequestMethod.GET, RequestMethod.POST})
    public String serviceValidate(HttpServletRequest request, HttpServletResponse response) {

        String queryString = request.getQueryString();
        System.out.println("[serviceValidate] " + queryString);

        String responseBody = "<cas:serviceResponse xmlns:cas='http://www.yale.edu/tp/cas'>\n"
                + "    <cas:authenticationSuccess>     \n"
                + "\t\t<cas:user>{\"passWord\":null,\"iscUserSourceId\":\"user011\",\"logintime\":1634113231179,\"iscAdCode\":\"yanjue\",\"scop\":0,\"baseOrgId\":\"1\",\"name\":\"yanjue\",\"iscUserId\":\"user011\"}</cas:user>\n"
                + "\t\t<cas:attributes>\n"
                + "\t\t\t<cas:iscUserId>user011</cas:iscUserId>\n"
                + "\t\t</cas:attributes>\n"
                + "        </cas:authenticationSuccess>\n"
                + "</cas:serviceResponse>";
        return responseBody;
    }

    @RequestMapping(value = "/isc_sso/v1/tickets", method = {RequestMethod.GET, RequestMethod.POST})
    public String verifyUserPassword(@RequestBody Map input, HttpServletRequest request, HttpServletResponse response) {

        System.out.println("[serviceValidate] " + input.toString());

        return "action=\"TGT-1-1052555-1Ih5FPlOpyf0lD2X2qmdTHeeylDsWC\"";
    }
}
